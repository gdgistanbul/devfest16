var AccountSummaries=require("../../lib/account-summaries/account-summaries"),assert=require("assert"),fixtureAccounts=require("./fixtures").get().items,fixtureWebProperties=fixtureAccounts.reduce(function(e,t){return t.webProperties?e.concat(t.webProperties):e},[]),fixtureProfiles=fixtureWebProperties.reduce(function(e,t){return t.profiles?e.concat(t.profiles):e},[]);require("native-promise-only"),require("./stubs/gapi"),describe("AccountSummaries",function(){var e=new AccountSummaries(fixtureAccounts);describe("#all",function(){it("returns the full list of accounts the user has access to.",function(){assert.deepEqual(e.all(),fixtureAccounts)})}),describe("#allAccounts",function(){it("returns the full list of accounts the user has access to.",function(){assert.deepEqual(e.all(),fixtureAccounts)})}),describe("#allWebProperties",function(){it("returns the full list of web properties the user has access to.",function(){assert.deepEqual(e.allWebProperties(),fixtureWebProperties)})}),describe("#allProperties",function(){it("returns the full list of properties the user has access to.",function(){assert.deepEqual(e.allProperties(),fixtureWebProperties)})}),describe("#allProfiles",function(){it("returns the full list of profiles the user has access to.",function(){assert.deepEqual(e.allProfiles(),fixtureProfiles)})}),describe("#allViews",function(){it("returns the full list of views the user has access to.",function(){assert.deepEqual(e.allViews(),fixtureProfiles)})}),describe("#get",function(){it("returns an account when passed an accountId param.",function(){var t=e.get({accountId:1002});assert.equal(t.name,"Account B")}),it("returns a webProperty when passed a webPropertyId param.",function(){var t=e.get({webPropertyId:"UA-1003-1"});assert.equal(t.name,"WebProperty C.A")}),it("returns a webProperty when passed a propertyId param.",function(){var t=e.get({propertyId:"UA-1003-1"});assert.equal(t.name,"WebProperty C.A")}),it("returns a profile when passed a profileId param.",function(){var t=e.get({profileId:2006});assert.equal(t.name,"Profile A.B.C")}),it("returns a profile when passed a viewId param.",function(){var t=e.get({viewId:2006});assert.equal(t.name,"Profile A.B.C")}),it("throws when passing more than one ID, even if the IDs are for the same entity.",function(){assert.throws(function(){e.get({webPropertyId:"UA-1003-1",profileId:3005})}),assert.throws(function(){e.get({accountId:1001,profileId:2001})})})}),describe("#getAccount",function(){it("returns the account with the specified ID.",function(){assert.equal(e.getAccount(1003).name,"Account C")})}),describe("#getWebProperty",function(){it("returns the web property with the specified ID.",function(){assert.equal(e.getWebProperty("UA-1005-1").name,"WebProperty E.A (View-less)")})}),describe("#getProperty",function(){it("returns the property with the specified ID.",function(){assert.equal(e.getProperty("UA-1005-1").name,"WebProperty E.A (View-less)")})}),describe("#getProfile",function(){it("returns the profile with the specified ID.",function(){assert.equal(e.getProfile(2010).name,"Profile B.A.A")})}),describe("#getView",function(){it("returns the view with the specified ID.",function(){assert.equal(e.getView(2010).name,"Profile B.A.A")})}),describe("#getAccountByProfileId",function(){it("returns the account that contains the specified profile ID.",function(){assert.equal(e.getAccountByViewId(2008).name,"Account A")})}),describe("#getAccountByViewId",function(){it("returns the account that contains the specified view ID.",function(){assert.equal(e.getAccountByViewId(2008).name,"Account A")})}),describe("#getWebPropertyByProfileId",function(){it("returns the web property that contains the specified profile ID.",function(){assert.equal(e.getWebPropertyByProfileId(2011).name,"WebProperty C.A")})}),describe("#getPropertyByViewId",function(){it("returns the property that contains the specified view ID.",function(){assert.equal(e.getPropertyByViewId(2011).name,"WebProperty C.A")})}),describe("#getAccountByWebPropertyId",function(){it("returns the account that contains the specified web property ID.",function(){assert.equal(e.getAccountByWebPropertyId("UA-1001-3").name,"Account A")})}),describe("#getAccountByPropertyId",function(){it("returns the account that contains the specified property ID.",function(){assert.equal(e.getAccountByPropertyId("UA-1001-3").name,"Account A")})})});